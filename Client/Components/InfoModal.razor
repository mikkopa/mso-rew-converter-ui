@inject HttpClient Http
@inject IJSRuntime JSRuntime

@if (IsVisible)
{
    <div class="modal-backdrop" @onclick="Close">
        <div class="modal-dialog" @onclick:stopPropagation="true">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">About MSO to REW Converter</h5>
                    <button type="button" class="btn-close" @onclick="Close" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @if (isLoading)
                    {
                        <div class="text-center p-4">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="mt-2">Loading documentation...</p>
                        </div>
                    }
                    else if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-warning">
                            <h6>Unable to load documentation</h6>
                            <p>@errorMessage</p>
                            <p>Please visit the repository directly for the latest information.</p>
                        </div>
                    }
                    else
                    {
                        <div class="readme-content">
                            @((MarkupString)readmeHtml)
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <a href="https://github.com/mikkopa/mso-rew-converter-ui" 
                       target="_blank" 
                       class="btn btn-primary">
                        <i class="bi bi-github"></i> View on GitHub
                    </a>
                    <button type="button" class="btn btn-secondary" @onclick="Close">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    private bool isLoading = false;
    private string readmeHtml = string.Empty;
    private string errorMessage = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        if (IsVisible && string.IsNullOrEmpty(readmeHtml) && string.IsNullOrEmpty(errorMessage))
        {
            await LoadReadme();
        }
    }

    private async Task LoadReadme()
    {
        isLoading = true;
        errorMessage = string.Empty;

        try
        {
            // Fetch the raw README.md from GitHub
            var readmeUrl = "https://raw.githubusercontent.com/mikkopa/mso-rew-converter-ui/main/README.md";
            var markdownContent = await Http.GetStringAsync(readmeUrl);
            
            // Convert markdown to HTML (basic conversion)
            readmeHtml = ConvertMarkdownToHtml(markdownContent);
        }
        catch (HttpRequestException ex)
        {
            errorMessage = $"Network error: {ex.Message}";
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading documentation: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private string ConvertMarkdownToHtml(string markdown)
    {
        if (string.IsNullOrEmpty(markdown))
            return "";

        // Basic markdown to HTML conversion
        var html = markdown;

        // Headers
        html = System.Text.RegularExpressions.Regex.Replace(html, @"^### (.+)$", "<h3>$1</h3>", System.Text.RegularExpressions.RegexOptions.Multiline);
        html = System.Text.RegularExpressions.Regex.Replace(html, @"^## (.+)$", "<h2>$1</h2>", System.Text.RegularExpressions.RegexOptions.Multiline);
        html = System.Text.RegularExpressions.Regex.Replace(html, @"^# (.+)$", "<h1>$1</h1>", System.Text.RegularExpressions.RegexOptions.Multiline);

        // Bold and italic
        html = System.Text.RegularExpressions.Regex.Replace(html, @"\*\*(.+?)\*\*", "<strong>$1</strong>");
        html = System.Text.RegularExpressions.Regex.Replace(html, @"\*(.+?)\*", "<em>$1</em>");
        html = System.Text.RegularExpressions.Regex.Replace(html, @"`(.+?)`", "<code>$1</code>");

        // Links
        html = System.Text.RegularExpressions.Regex.Replace(html, @"\[(.+?)\]\((.+?)\)", "<a href=\"$2\" target=\"_blank\">$1</a>");

        // Code blocks
        html = System.Text.RegularExpressions.Regex.Replace(html, @"```(\w+)?\n(.*?)\n```", "<pre><code>$2</code></pre>", System.Text.RegularExpressions.RegexOptions.Singleline);

        // Lists
        html = System.Text.RegularExpressions.Regex.Replace(html, @"^- (.+)$", "<li>$1</li>", System.Text.RegularExpressions.RegexOptions.Multiline);
        html = System.Text.RegularExpressions.Regex.Replace(html, @"^(\d+)\. (.+)$", "<li>$2</li>", System.Text.RegularExpressions.RegexOptions.Multiline);

        // Wrap consecutive list items
        html = System.Text.RegularExpressions.Regex.Replace(html, @"(<li>.*?</li>(\s*<li>.*?</li>)*)", "<ul>$1</ul>", System.Text.RegularExpressions.RegexOptions.Singleline);

        // Line breaks
        html = html.Replace("\n\n", "</p><p>").Replace("\n", "<br>");
        html = "<p>" + html + "</p>";

        // Clean up empty paragraphs
        html = System.Text.RegularExpressions.Regex.Replace(html, @"<p>\s*</p>", "");

        return html;
    }

    private async Task Close()
    {
        await OnClose.InvokeAsync();
    }
}

<style>
    .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1050;
        display: flex;
        align-items: center;
        justify-content: center;
        backdrop-filter: blur(2px);
    }

    .modal-dialog {
        max-width: 800px;
        width: 90%;
        max-height: 90vh;
        margin: 1rem;
    }

    .modal-content {
        background-color: white;
        border-radius: 0.5rem;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
        display: flex;
        flex-direction: column;
        max-height: 90vh;
    }

    .modal-header {
        padding: 1rem 1.5rem;
        border-bottom: 1px solid #e9ecef;
        display: flex;
        justify-content: between;
        align-items: center;
        background-color: #f8f9fa;
        border-radius: 0.5rem 0.5rem 0 0;
    }

    .modal-title {
        margin: 0;
        font-size: 1.25rem;
        font-weight: 600;
        color: #343a40;
        flex: 1;
    }

    .btn-close {
        border: none;
        background: none;
        font-size: 1.5rem;
        font-weight: bold;
        color: #6c757d;
        cursor: pointer;
        padding: 0;
        width: 2rem;
        height: 2rem;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .btn-close:hover {
        color: #000;
    }

    .modal-body {
        padding: 1.5rem;
        overflow-y: auto;
        flex: 1;
    }

    .modal-footer {
        padding: 1rem 1.5rem;
        border-top: 1px solid #e9ecef;
        display: flex;
        justify-content: flex-end;
        gap: 0.5rem;
        background-color: #f8f9fa;
        border-radius: 0 0 0.5rem 0.5rem;
    }

    .readme-content {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        line-height: 1.6;
        color: #333;
    }

    .readme-content h1 {
        font-size: 2rem;
        margin-bottom: 1rem;
        color: #1f2328;
        border-bottom: 1px solid #d0d7de;
        padding-bottom: 0.5rem;
    }

    .readme-content h2 {
        font-size: 1.5rem;
        margin-top: 2rem;
        margin-bottom: 1rem;
        color: #1f2328;
        border-bottom: 1px solid #d0d7de;
        padding-bottom: 0.5rem;
    }

    .readme-content h3 {
        font-size: 1.25rem;
        margin-top: 1.5rem;
        margin-bottom: 0.75rem;
        color: #1f2328;
    }

    .readme-content code {
        background-color: #f6f8fa;
        padding: 0.2em 0.4em;
        border-radius: 3px;
        font-size: 0.875em;
        font-family: ui-monospace, SFMono-Regular, 'SF Mono', Consolas, 'Liberation Mono', Menlo, monospace;
    }

    .readme-content pre {
        background-color: #f6f8fa;
        padding: 1rem;
        border-radius: 6px;
        overflow-x: auto;
        margin: 1rem 0;
    }

    .readme-content pre code {
        background: none;
        padding: 0;
        font-size: 0.875rem;
    }

    .readme-content ul {
        padding-left: 1.5rem;
        margin: 1rem 0;
    }

    .readme-content li {
        margin: 0.25rem 0;
    }

    .readme-content a {
        color: #0969da;
        text-decoration: none;
    }

    .readme-content a:hover {
        text-decoration: underline;
    }

    .btn {
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        border: 1px solid transparent;
        font-size: 0.875rem;
        font-weight: 500;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        cursor: pointer;
        transition: all 0.15s ease-in-out;
    }

    .btn-primary {
        background-color: #0d6efd;
        border-color: #0d6efd;
        color: white;
    }

    .btn-primary:hover {
        background-color: #0b5ed7;
        border-color: #0a58ca;
    }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
        color: white;
    }

    .btn-secondary:hover {
        background-color: #5c636a;
        border-color: #565e64;
    }

    .spinner-border {
        width: 2rem;
        height: 2rem;
        border: 0.25em solid currentColor;
        border-right-color: transparent;
        border-radius: 50%;
        animation: spinner-border 0.75s linear infinite;
    }

    .text-primary {
        color: #0d6efd !important;
    }

    .visually-hidden {
        position: absolute !important;
        width: 1px !important;
        height: 1px !important;
        padding: 0 !important;
        margin: -1px !important;
        overflow: hidden !important;
        clip: rect(0, 0, 0, 0) !important;
        white-space: nowrap !important;
        border: 0 !important;
    }

    .alert {
        padding: 0.75rem 1.25rem;
        margin-bottom: 1rem;
        border: 1px solid transparent;
        border-radius: 0.375rem;
    }

    .alert-warning {
        color: #664d03;
        background-color: #fff3cd;
        border-color: #ffecb5;
    }
</style>
